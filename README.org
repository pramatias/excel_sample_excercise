#+TITLE: eu_excel_generator — Record Generator and Reader CLI
#+AUTHOR: pramatias
#+DATE: 2025-06-10
#+DESCRIPTION: A Rust CLI tool to generate synthetic record Excel files and read/display them.
#+KEYWORDS: rust, cli, excel, record generation, excel-reading, automation
#+LANGUAGE: en
#+OPTIONS: toc:nil

* Table of Contents
- [[#overview][Overview]]
- [[#installation][Installation]]
- [[#configuration][Configuration]]
- [[#commands][Commands]]
  - [[#gen][Gen]]
  - [[#read][Read]]
  - [[#help][Help]]
- [[#usage-examples][Usage Examples]]
- [[#license][License]]

* Overview                                                                     :overview:
`eu_excel_generator` is a command‑line utility for generating synthetic datasets and reading them back from Excel files.
It provides two main subcommands:

  - **Gen**: Produce an `.xlsx` file populated with randomly generated records.
  - **Read**: Load an existing spreadsheet and pretty‑print its contents to the console.

* Installation :installation:

From GitHub source (latest development version):

#+BEGIN_SRC bash
git clone https://github.com/pramatias/excel_sample_excercise.git
cd excel_sample_excercise
cargo install --path .
#+END_SRC

Requirements:

  - Rust toolchain ≥ 1.60
  - `cargo` in your PATH

* Configuration :configuration:

No additional configuration files are needed. You may control logging behavior via CLI flags:

  - `-v` / `--verbose` (repeatable) to increase output verbosity
  - `-q` / `--quiet` (repeatable) to suppress non‑error messages

* Commands                                                                      :commands:
** Gen :gen:
Generate a new Excel file of synthetic records.

#+BEGIN_SRC bash
eu_excel_generator gen [OPTIONS]
#+END_SRC

Options:

  - `-n`, `--count <COUNT>`    Number of records to generate (default: 10000)
  - `-o`, `--output <PATH>`    Output file path (default: `records.xlsx`)
  - `-v`, `--verbose`          Increase logging verbosity (repeatable)
  - `-q`, `--quiet`            Decrease logging verbosity (repeatable)

On success, prints:

#+BEGIN_EXAMPLE
Generated 10000 records to "records.xlsx"
#+END_EXAMPLE

** Read                                                                       :read:
Read and display records from an existing file.

#+BEGIN_SRC bash
eu_excel_generator read <FILE>
#+END_SRC

Arguments:

  - `<FILE>`    Path to the `.xlsx` file to read

Example:

#+BEGIN_EXAMPLE
eu_excel_generator read records.xlsx
#=> Successfully read 10000 records from records.xlsx
#=> [pretty‑printed table of first few rows …]
#+END_EXAMPLE

** Help                                                                       :help:
Prints global help or subcommand‑specific help:

#+BEGIN_SRC bash
eu_excel_generator --help
eu_excel_generator gen --help
eu_excel_generator read --help
#+END_SRC

* Usage Examples                                                           :usage-examples:

** Generate 5,000 records with default name

#+BEGIN_SRC bash
eu_excel_generator gen -n 5000
#+END_SRC

** Generate 2,000 records into a custom file

#+BEGIN_SRC bash
eu_excel_generator gen -n 2000 -o sample_data.xlsx
#+END_SRC

** Read the generated file

#+BEGIN_SRC bash
eu_excel_generator read sample_data.xlsx
#+END_SRC

[[./assets/read_output.png]]   ; screenshot of pretty‑print output

* License                                                                      :license:
MIT License

See the full text in the `LICENSE` file at the root of this repository.
